# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: server.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x0cserver.proto\x12\x08llm_perf"\x1b\n\tFloatList\x12\x0e\n\x06values\x18\x01 \x03(\x01"\x1b\n\tInt64List\x12\x0e\n\x06values\x18\x01 \x03(\x03"\x1b\n\tBytesList\x12\x0e\n\x06values\x18\x01 \x03(\x0c"\x1c\n\nStringList\x12\x0e\n\x06values\x18\x01 \x03(\t"v\n\x06Struct\x12,\n\x06\x66ields\x18\x01 \x03(\x0b\x32\x1c.llm_perf.Struct.FieldsEntry\x1a>\n\x0b\x46ieldsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1e\n\x05value\x18\x02 \x01(\x0b\x32\x0f.llm_perf.Value:\x02\x38\x01"\xab\x02\n\x05Value\x12)\n\nfloat_list\x18\x01 \x01(\x0b\x32\x13.llm_perf.FloatListH\x00\x12)\n\nint64_list\x18\x02 \x01(\x0b\x32\x13.llm_perf.Int64ListH\x00\x12)\n\nbytes_list\x18\x03 \x01(\x0b\x32\x13.llm_perf.BytesListH\x00\x12\x10\n\x06\x66loat_\x18\x04 \x01(\x02H\x00\x12\x10\n\x06int64_\x18\x05 \x01(\x03H\x00\x12\x10\n\x06\x62ytes_\x18\x06 \x01(\x0cH\x00\x12+\n\x0bstring_list\x18\x07 \x01(\x0b\x32\x14.llm_perf.StringListH\x00\x12\x11\n\x07string_\x18\x08 \x01(\tH\x00\x12#\n\x07struct_\x18\t \x01(\x0b\x32\x10.llm_perf.StructH\x00\x42\x06\n\x04kind"\x9a\x01\n\x10InferenceRequest\x12\x0e\n\x06req_id\x18\x01 \x01(\t\x12\x36\n\x06inputs\x18\x02 \x03(\x0b\x32&.llm_perf.InferenceRequest.InputsEntry\x1a>\n\x0bInputsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1e\n\x05value\x18\x02 \x01(\x0b\x32\x0f.llm_perf.Value:\x02\x38\x01"\x9f\x01\n\x11InferenceResponse\x12\x0e\n\x06req_id\x18\x01 \x01(\t\x12\x39\n\x07outputs\x18\x02 \x03(\x0b\x32(.llm_perf.InferenceResponse.OutputsEntry\x1a?\n\x0cOutputsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1e\n\x05value\x18\x02 \x01(\x0b\x32\x0f.llm_perf.Value:\x02\x38\x01\x32\xae\x01\n\tInference\x12N\n\x11\x43ompleteInference\x12\x1a.llm_perf.InferenceRequest\x1a\x1b.llm_perf.InferenceResponse"\x00\x12Q\n\x12StreamingInference\x12\x1a.llm_perf.InferenceRequest\x1a\x1b.llm_perf.InferenceResponse"\x00\x30\x01\x62\x06proto3'
)


_FLOATLIST = DESCRIPTOR.message_types_by_name["FloatList"]
_INT64LIST = DESCRIPTOR.message_types_by_name["Int64List"]
_BYTESLIST = DESCRIPTOR.message_types_by_name["BytesList"]
_STRINGLIST = DESCRIPTOR.message_types_by_name["StringList"]
_STRUCT = DESCRIPTOR.message_types_by_name["Struct"]
_STRUCT_FIELDSENTRY = _STRUCT.nested_types_by_name["FieldsEntry"]
_VALUE = DESCRIPTOR.message_types_by_name["Value"]
_INFERENCEREQUEST = DESCRIPTOR.message_types_by_name["InferenceRequest"]
_INFERENCEREQUEST_INPUTSENTRY = _INFERENCEREQUEST.nested_types_by_name["InputsEntry"]
_INFERENCERESPONSE = DESCRIPTOR.message_types_by_name["InferenceResponse"]
_INFERENCERESPONSE_OUTPUTSENTRY = _INFERENCERESPONSE.nested_types_by_name[
    "OutputsEntry"
]
FloatList = _reflection.GeneratedProtocolMessageType(
    "FloatList",
    (_message.Message,),
    {
        "DESCRIPTOR": _FLOATLIST,
        "__module__": "server_pb2"
        # @@protoc_insertion_point(class_scope:llm_perf.FloatList)
    },
)
_sym_db.RegisterMessage(FloatList)

Int64List = _reflection.GeneratedProtocolMessageType(
    "Int64List",
    (_message.Message,),
    {
        "DESCRIPTOR": _INT64LIST,
        "__module__": "server_pb2"
        # @@protoc_insertion_point(class_scope:llm_perf.Int64List)
    },
)
_sym_db.RegisterMessage(Int64List)

BytesList = _reflection.GeneratedProtocolMessageType(
    "BytesList",
    (_message.Message,),
    {
        "DESCRIPTOR": _BYTESLIST,
        "__module__": "server_pb2"
        # @@protoc_insertion_point(class_scope:llm_perf.BytesList)
    },
)
_sym_db.RegisterMessage(BytesList)

StringList = _reflection.GeneratedProtocolMessageType(
    "StringList",
    (_message.Message,),
    {
        "DESCRIPTOR": _STRINGLIST,
        "__module__": "server_pb2"
        # @@protoc_insertion_point(class_scope:llm_perf.StringList)
    },
)
_sym_db.RegisterMessage(StringList)

Struct = _reflection.GeneratedProtocolMessageType(
    "Struct",
    (_message.Message,),
    {
        "FieldsEntry": _reflection.GeneratedProtocolMessageType(
            "FieldsEntry",
            (_message.Message,),
            {
                "DESCRIPTOR": _STRUCT_FIELDSENTRY,
                "__module__": "server_pb2"
                # @@protoc_insertion_point(class_scope:llm_perf.Struct.FieldsEntry)
            },
        ),
        "DESCRIPTOR": _STRUCT,
        "__module__": "server_pb2"
        # @@protoc_insertion_point(class_scope:llm_perf.Struct)
    },
)
_sym_db.RegisterMessage(Struct)
_sym_db.RegisterMessage(Struct.FieldsEntry)

Value = _reflection.GeneratedProtocolMessageType(
    "Value",
    (_message.Message,),
    {
        "DESCRIPTOR": _VALUE,
        "__module__": "server_pb2"
        # @@protoc_insertion_point(class_scope:llm_perf.Value)
    },
)
_sym_db.RegisterMessage(Value)

InferenceRequest = _reflection.GeneratedProtocolMessageType(
    "InferenceRequest",
    (_message.Message,),
    {
        "InputsEntry": _reflection.GeneratedProtocolMessageType(
            "InputsEntry",
            (_message.Message,),
            {
                "DESCRIPTOR": _INFERENCEREQUEST_INPUTSENTRY,
                "__module__": "server_pb2"
                # @@protoc_insertion_point(class_scope:llm_perf.InferenceRequest.InputsEntry)
            },
        ),
        "DESCRIPTOR": _INFERENCEREQUEST,
        "__module__": "server_pb2"
        # @@protoc_insertion_point(class_scope:llm_perf.InferenceRequest)
    },
)
_sym_db.RegisterMessage(InferenceRequest)
_sym_db.RegisterMessage(InferenceRequest.InputsEntry)

InferenceResponse = _reflection.GeneratedProtocolMessageType(
    "InferenceResponse",
    (_message.Message,),
    {
        "OutputsEntry": _reflection.GeneratedProtocolMessageType(
            "OutputsEntry",
            (_message.Message,),
            {
                "DESCRIPTOR": _INFERENCERESPONSE_OUTPUTSENTRY,
                "__module__": "server_pb2"
                # @@protoc_insertion_point(class_scope:llm_perf.InferenceResponse.OutputsEntry)
            },
        ),
        "DESCRIPTOR": _INFERENCERESPONSE,
        "__module__": "server_pb2"
        # @@protoc_insertion_point(class_scope:llm_perf.InferenceResponse)
    },
)
_sym_db.RegisterMessage(InferenceResponse)
_sym_db.RegisterMessage(InferenceResponse.OutputsEntry)

_INFERENCE = DESCRIPTOR.services_by_name["Inference"]
if _descriptor._USE_C_DESCRIPTORS == False:
    DESCRIPTOR._options = None
    _STRUCT_FIELDSENTRY._options = None
    _STRUCT_FIELDSENTRY._serialized_options = b"8\001"
    _INFERENCEREQUEST_INPUTSENTRY._options = None
    _INFERENCEREQUEST_INPUTSENTRY._serialized_options = b"8\001"
    _INFERENCERESPONSE_OUTPUTSENTRY._options = None
    _INFERENCERESPONSE_OUTPUTSENTRY._serialized_options = b"8\001"
    _FLOATLIST._serialized_start = 26
    _FLOATLIST._serialized_end = 53
    _INT64LIST._serialized_start = 55
    _INT64LIST._serialized_end = 82
    _BYTESLIST._serialized_start = 84
    _BYTESLIST._serialized_end = 111
    _STRINGLIST._serialized_start = 113
    _STRINGLIST._serialized_end = 141
    _STRUCT._serialized_start = 143
    _STRUCT._serialized_end = 261
    _STRUCT_FIELDSENTRY._serialized_start = 199
    _STRUCT_FIELDSENTRY._serialized_end = 261
    _VALUE._serialized_start = 264
    _VALUE._serialized_end = 563
    _INFERENCEREQUEST._serialized_start = 566
    _INFERENCEREQUEST._serialized_end = 720
    _INFERENCEREQUEST_INPUTSENTRY._serialized_start = 658
    _INFERENCEREQUEST_INPUTSENTRY._serialized_end = 720
    _INFERENCERESPONSE._serialized_start = 723
    _INFERENCERESPONSE._serialized_end = 882
    _INFERENCERESPONSE_OUTPUTSENTRY._serialized_start = 819
    _INFERENCERESPONSE_OUTPUTSENTRY._serialized_end = 882
    _INFERENCE._serialized_start = 885
    _INFERENCE._serialized_end = 1059
# @@protoc_insertion_point(module_scope)
