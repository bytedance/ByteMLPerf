#include <sys/time.h>
#include "mlu.h"
#include "kernels.h"

__nram__ char nram_buffer[MAX_NRAM_SIZE] = {0};

__mlu_global__ void fma_bfloat16(PeakTimeInfo *peak_ptr) 
{
#if (__BANG_ARCH__ >= 590)
    bfloat16_t *src = (bfloat16_t *)nram_buffer;
    bfloat16_t *dst = (bfloat16_t *)(src + NUM);

    struct timeval t_start;
    struct timeval t_end;

    gettimeofday(&t_start, NULL);
    #pragma unroll 50
    for(int i = 0; i < REPEAT; i++) {
        __bang_fusion(FUSION_FMA, dst, src, (bfloat16_t)2.0f, (bfloat16_t)2.0f, NUM);
    }
    gettimeofday(&t_end, NULL);

    uint32_t fusion_hardware_time =
        (1000000U * (uint32_t)t_end.tv_sec + (uint32_t)t_end.tv_usec) -
        (1000000U * (uint32_t)t_start.tv_sec + (uint32_t)t_start.tv_usec);

    int32_t compute_flops = NUM * REPEAT * 2 * taskDim;
    peak_ptr[taskId].fusion_hardware_time = fusion_hardware_time;
    peak_ptr[taskId].fusion_tflops = (float)compute_flops / fusion_hardware_time / 1000000;
#endif
}
